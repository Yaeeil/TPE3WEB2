*Requerimientos Funcionales Mínimos

La API Rest debe ser RESTful

  El servicio que lista una colección entera debe poder ordenarse opcionalmente por al menos un campo de la tabla, de manera ascendente o descendente.

  La API Rest debe manejar de manera adecuada al menos los siguientes códigos de error (200, 201, 400 y 404)

  El servicio que obtiene una colección entera debe poder paginar.

  El servicio que obtiene una colección entera debe poder filtrarse por alguno de sus campos.

  El servicio debe requerir un token para realizar modificaciones (PUT, POST)

Requerimientos NO Funcionales OBLIGATORIOS

  Se debe adjuntar documentación de los endpoints generados en el README.md del repositorio.
  Es decir, una descripción de cada endpoint, cómo se usan y ejemplos.
  Entender que esta documentación la va a leer otro desarrollador para entender cómo se consume la API.

Aclaraciones

  Respecto al modelo de datos: Se puede (y se alienta) agregar columnas/tablas para que el servicio que agreguen tenga más sentido en su contexto.

Ejemplo: Agregar una tabla “reseñas” para almacenar las reseñas via API REST de una película.

NOTA: La base de datos es compartida por los dos proyectos. Tener cuidado de no “romper” la primera entrega con los cambios en la DB de la segunda.

Miembro A:
Listado ordenado
PUT
Ordenado por cualquier campo (opcional)

Miembro B:
Obtener un elemento por ID
POST
Filtado (opcional)

Opcionales que suman a ambos:
Paginado
Autenticación Token


